version: '3'

services:
  customers-api:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: umalmyha/customers
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SLL_MODE=${POSTGRES_SLL_MODE}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_POOL_MAX_CONN=${POSTGRES_POOL_MAX_CONN}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_MAX_POOL_SIZE=${MONGO_MAX_POOL_SIZE}
      - AUTH_JWT_ISSUER=${AUTH_JWT_ISSUER}
      - AUTH_JWT_TIME_TO_LIVE=${AUTH_JWT_TIME_TO_LIVE}
      - AUTH_JWT_PRIVATE_KEY_FILE=${AUTH_JWT_PRIVATE_KEY_FILE}
      - AUTH_JWT_PUBLIC_KEY_FILE=${AUTH_JWT_PUBLIC_KEY_FILE}
      - AUTH_REFRESH_TOKEN_COOKIE_NAME=${AUTH_REFRESH_TOKEN_COOKIE_NAME}
      - AUTH_REFRESH_TOKEN_MAX_COUNT=${AUTH_REFRESH_TOKEN_MAX_COUNT}
      - AUTH_REFRESH_TOKEN_TIME_TO_LIVE=${AUTH_REFRESH_TOKEN_TIME_TO_LIVE}
    restart: always
    depends_on:
      - pg-customers
      - migrate
      - mongo-customers
    ports:
      - "3000:3000"

  pg-customers:
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    volumes:
      - pgcustomers:/var/lib/postgresql/data

  mongo-customers:
    image: "mongo:latest"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongocustomers:/data/db

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    image: umalmyha/migrate
    volumes:
      - ./migrations:/migrations
    command: bash -c "
      ./wait-for-it.sh pg-customers:5432 --timeout=5
      && migrate -path /migrations -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg-customers:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SLL_MODE} up
      "
    depends_on:
      - pg-customers

volumes:
  pgcustomers:
  mongocustomers:
version: '3'

services:
  customers-api:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: umalmyha/customers
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SLL_MODE=${POSTGRES_SLL_MODE}
      - POSTGRES_POOL_MAX_CONN=${POSTGRES_POOL_MAX_CONN}
    restart: always
    depends_on:
      - pg-customers
      - migrate
    ports:
      - "3000:3000"

  pg-customers:
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 5
    restart: always
    volumes:
      - pgcustomers:/var/lib/postgresql/data

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    image: umalmyha/migrate
    volumes:
      - ./migrations:/migrations
    command: bash -c "
      ./wait-for-it.sh pg-customers:5432 --timeout=5
      && migrate -path /migrations -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg-customers:5432/${POSTGRES_DB}?sslmode=${POSTGRES_SLL_MODE} up
      "
    depends_on:
      - pg-customers

volumes:
  pgcustomers: